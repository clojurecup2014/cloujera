define(["backbone","js/lib/underscore.extend"],function(Backbone,_){var QuestionModel=Backbone.Model.extend({questionInstanceAttributes:["localResponse","effectiveResponse","variant","feedback","id"],initialize:function(){this._loadEffectiveResponseIntoLocalResponse(),this.on("change:effectiveResponse",this._loadEffectiveResponseIntoLocalResponse,this),this.on("change:localResponse",this._handleLocalResponseChange,this)},_loadEffectiveResponseIntoLocalResponse:function(){if(this.get("effectiveResponse"))this.set("localResponse",this.get("effectiveResponse").response,{reason:"loadfromeffective"});else this.set("localResponse",null,{reason:"loadfromeffective"})},_handleLocalResponseChange:function(model,changes,options){if("userinput"===options.reason)this._persistLocalResponseLocally()},_persistLocalResponseLocally:function(){},toLocalJson:function(){var data=Backbone.Model.prototype.toJSON.call(this);return _(data).courseraPick(this.questionInstanceAttributes)},toResponseJson:function(){return{timestamp:null,questionInstance:this.get("id"),response:this.get("localResponse")}},isInstanceChanged:function(){return _(this.changed).chain().keys().intersection(this.questionInstanceAttributes).value().length>0}});return QuestionModel});